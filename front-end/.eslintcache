[{"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reportWebVitals.js":"1","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\home\\index.js":"2","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\test\\Test.js":"3","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\authReducer.js":"4","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\privateRoutes\\PrivateRoutes.js":"5","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\utils\\setAuthToken.js":"6","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\displays\\index.js":"7","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\store.js":"8","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\Kanban.js":"9","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\authActions.js":"10","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\side-nav\\SideNav.js":"11","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\companies\\index.js":"12","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\App.js":"13","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\top-nav\\TopNav.js":"14","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\about\\index.js":"15","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\index.js":"16","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\errorReducer.js":"17","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\how\\index.js":"18","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\register\\index.js":"19","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\contact\\index.js":"20","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\footer\\index.js":"21","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\listsReducer.js":"22","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\index.js":"23","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\columnItem\\ColumnItem.js":"24","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\column\\Column.js":"25","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\index.js":"26","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\actionButton\\ActionButton.js":"27","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\types.js":"28","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\listsActions.js":"29","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\cardActions.js":"30","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\faq\\index.js":"31","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\columnItem\\EditItem.js":"32"},{"size":375,"mtime":1610678096026,"results":"33","hashOfConfig":"34"},{"size":1418,"mtime":1610678096032,"results":"35","hashOfConfig":"34"},{"size":533,"mtime":1610678096024,"results":"36","hashOfConfig":"34"},{"size":622,"mtime":1610678096026,"results":"37","hashOfConfig":"34"},{"size":635,"mtime":1610678096024,"results":"38","hashOfConfig":"34"},{"size":338,"mtime":1610678096027,"results":"39","hashOfConfig":"34"},{"size":1963,"mtime":1610678096020,"results":"40","hashOfConfig":"34"},{"size":334,"mtime":1612241970822,"results":"41","hashOfConfig":"34"},{"size":2062,"mtime":1612585150283,"results":"42","hashOfConfig":"34"},{"size":1751,"mtime":1610678096017,"results":"43","hashOfConfig":"34"},{"size":2511,"mtime":1610678096019,"results":"44","hashOfConfig":"34"},{"size":395,"mtime":1610678096019,"results":"45","hashOfConfig":"34"},{"size":2606,"mtime":1612241987388,"results":"46","hashOfConfig":"34"},{"size":1528,"mtime":1612242082585,"results":"47","hashOfConfig":"34"},{"size":2558,"mtime":1610678096018,"results":"48","hashOfConfig":"34"},{"size":517,"mtime":1612387448397,"results":"49","hashOfConfig":"34"},{"size":250,"mtime":1612453926829,"results":"50","hashOfConfig":"34"},{"size":2027,"mtime":1610678096023,"results":"51","hashOfConfig":"34"},{"size":3878,"mtime":1610678096034,"results":"52","hashOfConfig":"34"},{"size":245,"mtime":1610678096028,"results":"53","hashOfConfig":"34"},{"size":195,"mtime":1610678096021,"results":"54","hashOfConfig":"34"},{"size":4734,"mtime":1613001458842,"results":"55","hashOfConfig":"34"},{"size":279,"mtime":1612405847075,"results":"56","hashOfConfig":"34"},{"size":2076,"mtime":1612993096299,"results":"57","hashOfConfig":"34"},{"size":4095,"mtime":1612993077985,"results":"58","hashOfConfig":"34"},{"size":1214,"mtime":1612412536604,"results":"59","hashOfConfig":"34"},{"size":3043,"mtime":1612888259184,"results":"60","hashOfConfig":"34"},{"size":521,"mtime":1613000724996,"results":"61","hashOfConfig":"34"},{"size":1056,"mtime":1612947013750,"results":"62","hashOfConfig":"34"},{"size":510,"mtime":1613001269334,"results":"63","hashOfConfig":"34"},{"size":235,"mtime":1610678096031,"results":"64","hashOfConfig":"34"},{"size":3403,"mtime":1613001521337,"results":"65","hashOfConfig":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},"ok5h7x",{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"71"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"81"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"84"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"95"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"90"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"101"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"105"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108","usedDeprecatedRules":"71"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"113"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"71"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reportWebVitals.js",[],["147","148"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\home\\index.js",[],["149","150"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\test\\Test.js",[],["151","152"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\authReducer.js",["153"],"import {\r\n    SET_CURRENT_USER,\r\n    USER_LOADING\r\n  } from \"../actions/types\";\r\n  const isEmpty = require(\"is-empty\");\r\n  const initialState = {\r\n    isAuthenticated: false,\r\n    user: {},\r\n    loading: false\r\n  };\r\n  export default function(state = initialState, action) {\r\n    switch (action.type) {\r\n      case SET_CURRENT_USER:\r\n        return {\r\n          ...state,\r\n          isAuthenticated: !isEmpty(action.payload),\r\n          user: action.payload\r\n        };\r\n      case USER_LOADING:\r\n        return {\r\n          ...state,\r\n          loading: true\r\n        };\r\n      default:\r\n        return state;\r\n    }\r\n  }","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\privateRoutes\\PrivateRoutes.js",["154"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);",["155","156"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\utils\\setAuthToken.js",[],["157","158"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\displays\\index.js",[],["159","160"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\store.js",[],["161","162"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\Kanban.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\authActions.js",[],["163","164"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\side-nav\\SideNav.js",["165"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './index.css';\r\n\r\nfunction SideNav() {\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    return (\r\n        <div className=\"side__nav__container\">\r\n            <div className=\"top__side__nav__container\">\r\n                {\r\n                    user.profilePicture ? <img className=\"side__profile__picture\" src={user.profilePicture} alt=\"Profile picture\" /> : <AccountCircleIcon className=\"side__profile__picture side__profile__icon\" />\r\n                }\r\n                <h5 className=\"side__nav__email\">{user.email}</h5>\r\n                <h6>Your tier: <span className=\"side__nav__tier\">{user.tier}</span></h6>\r\n                <Divider />\r\n                <div className=\"side__nav__navigation__container\">\r\n                    <div className=\"side__nav__navigation__section\">\r\n                        <h4 className=\"side__nav__category\">Management</h4>\r\n                        <ul>\r\n                        \r\n                            <NavLink className=\"no__underline side__nav__section__item\" exact activeClassName=\"active__two\" to=\"/dashboard\">\r\n                                <DashboardIcon className=\"side__nav__section__icon\" />\r\n                                Dashboard\r\n                            </NavLink>\r\n                            <NavLink className=\"no__underline side__nav__section__item\" activeClassName=\"active__two\" to=\"/dashboard/kanban\">\r\n                                <FormatListBulletedIcon className=\"side__nav__section__icon\" />\r\n                                Kanban\r\n                            </NavLink>\r\n                            <NavLink className=\"no__underline side__nav__section__item\" activeClassName=\"active__two\" to=\"/dashboard/time-management\">\r\n                                <TimelapseIcon className=\"side__nav__section__icon\"/>\r\n                                Time\r\n                            </NavLink>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideNav;\r\n","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\companies\\index.js",[],["166","167"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\App.js",["168"],"import Navigation from './components/navigation';\r\nimport About from './views/about';\r\nimport Contact from './views/contact';\r\nimport Pricing from './views/pricing';\r\nimport Faq from './views/faq';\r\nimport Home from './views/home';\r\nimport Login from './views/login';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport PrivateRoute from \"./components/privateRoutes/PrivateRoutes\";\r\nimport Register from './views/register';\r\nimport DashBoard from './views/dashboard';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./store\";\r\nimport Kanban from './views/dashboard/views/kanban/Kanban';\r\nimport TimeManagement from './views/dashboard/views/time-management/TimeManagement';\r\nimport Settings from './views/dashboard/views/settings/Settings';\r\n\r\nimport './App.css';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n// Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/pricing\" component={Pricing} />\r\n              <Route path=\"/contact\" component={Contact} />\r\n              <Route path=\"/faq\" component={Faq} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/dashboard\" component={DashBoard} />\r\n                <PrivateRoute path=\"/dashboard/time-management\" component={TimeManagement} />\r\n                <PrivateRoute path=\"/dashboard/kanban\" component={Kanban} />\r\n                <PrivateRoute path=\"/dashboard/settings\" component={Settings} />\r\n              </Switch>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default App;\r\n",["169","170"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\top-nav\\TopNav.js",["171"],"import React from 'react';\r\nimport './index.css';\r\nimport { useSelector } from 'react-redux';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport NotificationsIcon from '@material-ui/icons/Notifications';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nfunction TopNav() {\r\n    //delete later testing purposes\r\n    const user = useSelector(state => state.auth.user);\r\n    return (\r\n        <div className=\"dashboard__top__nav\">\r\n            <div className=\"guru__logo__container\">\r\n                <img className=\"guru__head\" src=\"../../../images/guru_head.svg\" alt=\"\" />\r\n            </div>\r\n            <div className=\"profile__settings\">\r\n                <h5>{user.email}</h5>\r\n                {\r\n                    user.profilePicture ? <img className=\"smaller__profile__picture\" src={user.profilePicture} alt=\"Profile picture\" /> : <AccountCircleIcon className=\"smaller__profile__picture top__profile__icon\" />\r\n                }\r\n                <IconButton>\r\n                    <NavLink to=\"/dashboard/settings\">\r\n                        <SettingsIcon fontSize=\"large\" className=\"top__nav__icons\" />\r\n                    </NavLink>\r\n                </IconButton>\r\n                <IconButton>\r\n                    <NotificationsIcon fontSize=\"large\" className=\"top__nav__icons\" />\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default TopNav;\r\n","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\about\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\index.js",[],["172","173"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\errorReducer.js",["174"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\how\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\register\\index.js",["175"],"import React, { Component } from 'react';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './index.css';\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from 'react-redux';\r\nimport { registerUser } from \"../../actions/authActions\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport classnames from \"classnames\";\r\nimport Navigation from '../../components/navigation';\r\n\r\nclass Register extends Component {\r\n     \r\n    state = {\r\n        name: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        password2: \"\",\r\n        errors: {}\r\n    }\r\n\r\n    componentDidMount() {\r\n        // If logged in and user navigates to Register page, should redirect them to dashboard\r\n        if (this.props.auth.isAuthenticated) {\r\n          this.props.history.push(\"/dashboard\");\r\n        }\r\n    }\r\n\r\n    componentWillReceiveProps(nextProps) {\r\n        if (nextProps.errors) {\r\n          this.setState({\r\n            errors: nextProps.errors\r\n          });\r\n        }\r\n      }\r\n\r\n    //change state onchange\r\n    onChange = (e) => {\r\n        this.setState({ [e.target.id]: e.target.value});\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const newUser = {\r\n            name: this.state.name,\r\n            email: this.state.email,\r\n            password: this.state.password,\r\n            password2: this.state.password2\r\n        };\r\n        this.props.registerUser(newUser, this.props.history);\r\n    }\r\n    \r\n    render () {\r\n        const { errors, name, email, password, password2 } = this.state;\r\n        return (\r\n            \r\n                <div>\r\n                    <Navigation />\r\n                    <div className=\"register__container\">\r\n                        <div className=\"register__modal\">\r\n                            <AccountCircleIcon className=\"register__icon\" />\r\n                            <h3>Register</h3>\r\n                            <form className=\"register__modal__form\" method=\"post\" onSubmit={this.onSubmit}>\r\n                                <span className=\"validation__errors\">{errors.name}</span>\r\n                                <TextField id=\"name\" error={errors.name} type=\"text\" required className=\"register__textField\" label=\"Name\" variant=\"outlined\" value={name} onChange={this.onChange} />\r\n                                <span className=\"validation__errors\">{errors.email}</span>\r\n                                <TextField id=\"email\" error={errors.email} type=\"email\" required className=\"register__textField\" label=\"Email\" variant=\"outlined\" value={email} onChange={this.onChange} />\r\n                                <span className=\"validation__errors\">{errors.password}</span>\r\n                                <TextField id=\"password\" error={errors.password} type=\"password\" required className=\"register__textField\" label=\"Password\" variant=\"outlined\" value={password} onChange={this.onChange} />\r\n                                <span className=\"validation__errors\">{errors.password2}</span>\r\n                                <TextField id=\"password2\" error={errors.password2} type=\"password\" required className=\"register__textField\" label=\"Re-Type Password\" variant=\"outlined\" value={password2} onChange={this.onChange}/>\r\n                                <input className=\"register__button\" type=\"submit\" value=\"Create Account\" />\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n        )\r\n    }\r\n}\r\n\r\nRegister.propTypes = {\r\n    registerUser: PropTypes.func.isRequired,\r\n    auth: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired\r\n  };\r\n\r\nconst mapStateToProps = state => ({\r\n    auth: state.auth,\r\n    errors: state.errors\r\n});\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { registerUser }\r\n) (withRouter(Register));\r\n","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\contact\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\footer\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\listsReducer.js",["176","177","178"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\columnItem\\ColumnItem.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\column\\Column.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\actionButton\\ActionButton.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\types.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\listsActions.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\cardActions.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\faq\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\components\\columnItem\\EditItem.js",[],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"179","replacedBy":"183"},{"ruleId":"181","replacedBy":"184"},{"ruleId":"179","replacedBy":"185"},{"ruleId":"181","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":11,"column":3,"nodeType":"189","endLine":27,"endColumn":4},{"ruleId":"190","severity":1,"message":"191","line":1,"column":17,"nodeType":"192","messageId":"193","endLine":1,"endColumn":26},{"ruleId":"179","replacedBy":"194"},{"ruleId":"181","replacedBy":"195"},{"ruleId":"179","replacedBy":"196"},{"ruleId":"181","replacedBy":"197"},{"ruleId":"179","replacedBy":"198"},{"ruleId":"181","replacedBy":"199"},{"ruleId":"179","replacedBy":"200"},{"ruleId":"181","replacedBy":"201"},{"ruleId":"179","replacedBy":"202"},{"ruleId":"181","replacedBy":"203"},{"ruleId":"204","severity":1,"message":"205","line":19,"column":43,"nodeType":"206","endLine":19,"endColumn":133},{"ruleId":"179","replacedBy":"207"},{"ruleId":"181","replacedBy":"208"},{"ruleId":"190","severity":1,"message":"209","line":1,"column":8,"nodeType":"192","messageId":"193","endLine":1,"endColumn":18},{"ruleId":"179","replacedBy":"210"},{"ruleId":"181","replacedBy":"211"},{"ruleId":"204","severity":1,"message":"205","line":21,"column":43,"nodeType":"206","endLine":21,"endColumn":136},{"ruleId":"179","replacedBy":"212"},{"ruleId":"181","replacedBy":"213"},{"ruleId":"187","severity":1,"message":"188","line":3,"column":1,"nodeType":"189","endLine":10,"endColumn":2},{"ruleId":"190","severity":1,"message":"214","line":9,"column":8,"nodeType":"192","messageId":"193","endLine":9,"endColumn":18},{"ruleId":"190","severity":1,"message":"215","line":1,"column":10,"nodeType":"192","messageId":"193","endLine":1,"endColumn":14},{"ruleId":"190","severity":1,"message":"216","line":62,"column":17,"nodeType":"192","messageId":"193","endLine":62,"endColumn":28},{"ruleId":"190","severity":1,"message":"217","line":117,"column":21,"nodeType":"192","messageId":"193","endLine":117,"endColumn":27},"no-native-reassign",["218"],"no-negated-in-lhs",["219"],["218"],["219"],["218"],["219"],"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar",["218"],["219"],["218"],["219"],["218"],["219"],["218"],["219"],["218"],["219"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement",["218"],["219"],"'Navigation' is defined but never used.",["218"],["219"],["218"],["219"],"'classnames' is defined but never used.","'List' is defined but never used.","'draggableId' is assigned a value but never used.","'listID' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]