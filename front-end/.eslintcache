[{"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reportWebVitals.js":"1","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\home\\index.js":"2","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\test\\Test.js":"3","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\authReducer.js":"4","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\privateRoutes\\PrivateRoutes.js":"5","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\utils\\setAuthToken.js":"6","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\displays\\index.js":"7","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\store.js":"8","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\Kanban.js":"9","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\authActions.js":"10","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\side-nav\\SideNav.js":"11","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\companies\\index.js":"12","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\Card.js":"13","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\App.js":"14","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\top-nav\\TopNav.js":"15","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\about\\index.js":"16","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\KanbanOriginal.js":"17","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\index.js":"18","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\errorReducer.js":"19","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\how\\index.js":"20"},{"size":375,"mtime":1610678096026,"results":"21","hashOfConfig":"22"},{"size":1418,"mtime":1610678096032,"results":"23","hashOfConfig":"22"},{"size":533,"mtime":1610678096024,"results":"24","hashOfConfig":"22"},{"size":622,"mtime":1610678096026,"results":"25","hashOfConfig":"22"},{"size":635,"mtime":1610678096024,"results":"26","hashOfConfig":"22"},{"size":338,"mtime":1610678096027,"results":"27","hashOfConfig":"22"},{"size":1963,"mtime":1610678096020,"results":"28","hashOfConfig":"22"},{"size":334,"mtime":1612241970822,"results":"29","hashOfConfig":"22"},{"size":3709,"mtime":1612318785777,"results":"30","hashOfConfig":"22"},{"size":1751,"mtime":1610678096017,"results":"31","hashOfConfig":"22"},{"size":2511,"mtime":1610678096019,"results":"32","hashOfConfig":"22"},{"size":395,"mtime":1610678096019,"results":"33","hashOfConfig":"22"},{"size":1171,"mtime":1612318068310,"results":"34","hashOfConfig":"22"},{"size":2606,"mtime":1612241987388,"results":"35","hashOfConfig":"22"},{"size":1528,"mtime":1612242082585,"results":"36","hashOfConfig":"22"},{"size":2558,"mtime":1610678096018,"results":"37","hashOfConfig":"22"},{"size":6231,"mtime":1612282544728,"results":"38","hashOfConfig":"22"},{"size":517,"mtime":1610678096025,"results":"39","hashOfConfig":"22"},{"size":250,"mtime":1610678096026,"results":"40","hashOfConfig":"22"},{"size":2027,"mtime":1610678096023,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ok5h7x",{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"53"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"67"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"87"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reportWebVitals.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\home\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\test\\Test.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\authReducer.js",["92"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\privateRoutes\\PrivateRoutes.js",["93"],"import React, { Component } from 'react';\r\nimport { Route, Redirect } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nconst PrivateRoute = ({ component: Component, auth, ...rest }) => (\r\n    <Route\r\n    {...rest}\r\n    render={props =>\r\n      auth.isAuthenticated === true ? (\r\n        <Component {...props} />\r\n      ) : (\r\n        <Redirect to=\"/login\" />\r\n      )\r\n    }\r\n  />\r\n);\r\n\r\nPrivateRoute.propTypes = {\r\n    auth: PropTypes.object.isRequired\r\n};\r\n\r\nconst mapStateToProps = (state) => ({\r\n    auth: state.auth\r\n})\r\n\r\nexport default connect(mapStateToProps)(PrivateRoute);",["94","95"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\utils\\setAuthToken.js",[],["96","97"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\displays\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\store.js",[],["98","99"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\Kanban.js",["100"],"import React, { useState } from \"react\";\r\nimport { DragDropContext, Droppable, Draggable } from \"react-beautiful-dnd\";\r\nimport { Reorder } from \"./Utils\";\r\nimport SideNav from '../../../../components/dashboard/side-nav/SideNav';\r\nimport TopNav from '../../../../components/dashboard/top-nav/TopNav';\r\nimport Card from \"./Card\";\r\nimport AppsIcon from '@material-ui/icons/Apps';\r\nimport './Category.css';\r\n\r\n// fake data generator\r\nconst getCategories = (count) => {\r\n    Array.from({ length: count }, (v, k) => k).map(k => ({\r\n    id: `category-${k}`,\r\n    content: `category ${k}`,\r\n    cards: [`card-1`, `card-2`, `card-3`]\r\n}))};\r\n\r\nfunction Kanban() {\r\n    const [ categories, setCategories] = useState([{id: 'category-1', content: 'category 1', cards: [`card-1`, `card-2`, `card-3`]},{id: 'category-2', content: 'category 2', cards: [`card-1`, `card-2`, `card-3`]},{id: 'category-3', content: 'category 3', cards: [`card-1`, `card-2`, `card-3`]}])\r\n\r\n    const onDragEnd = (result) => {\r\n    // dropped outside the list\r\n    if (!result.destination) {\r\n      //console.log(\"no-change\");\r\n      return;\r\n    }\r\n\r\n    if (result.type === \"categories\") {\r\n      console.log(result);\r\n      console.log(result.source.index)\r\n      console.log(result.destination.index)\r\n      const newCategories = Reorder(\r\n        categories,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n\r\n      setCategories(newCategories);\r\n    } else {\r\n      const cards = Reorder(\r\n        categories[parseInt(result.type, 10)].cards,\r\n        result.source.index,\r\n        result.destination.index\r\n      );\r\n\r\n      const newCategories = JSON.parse(JSON.stringify(categories));\r\n\r\n      newCategories[result.type].cards = cards;\r\n\r\n      setCategories(newCategories);\r\n    }\r\n  }\r\n\r\n  // Normally you would want to split things out into separate components.\r\n  // But in this example everything is just done in one place for simplicity\r\n    return (\r\n        <div className=\"dashboard__container\">\r\n            <TopNav />\r\n            <div className=\"dashboard__second__container\">\r\n                <SideNav />\r\n                <DragDropContext onDragEnd={onDragEnd}>\r\n                    <Droppable droppableId=\"droppable\" direction=\"horizontal\" type=\"categories\">\r\n                    {(provided) => (\r\n                        <div className=\"dashboard__kanban__container\" ref={provided.innerRef}>\r\n                        {categories.map((category, index) => (\r\n                            <Draggable\r\n                            key={category.id}\r\n                            draggableId={category.id}\r\n                            index={index}\r\n                            >\r\n                            \r\n                            {(provided) => (\r\n                                <div className=\"container__category\"\r\n                                ref={provided.innerRef}\r\n                                {...provided.draggableProps}\r\n                                >\r\n                                {category.content}\r\n                                <span {...provided.dragHandleProps}>\r\n                                    <AppsIcon\r\n                                    />\r\n                                </span>\r\n                                <Card categoryNum={index} category={category} />\r\n                                </div>\r\n                            )}\r\n                            </Draggable>\r\n                        ))}\r\n                        {provided.placeholder}\r\n                        </div>\r\n                    )}\r\n                    </Droppable>\r\n                </DragDropContext>\r\n            </div>\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default Kanban;","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\actions\\authActions.js",[],["101","102"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\side-nav\\SideNav.js",["103"],"import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport DashboardIcon from '@material-ui/icons/Dashboard';\r\nimport FormatListBulletedIcon from '@material-ui/icons/FormatListBulleted';\r\nimport TimelapseIcon from '@material-ui/icons/Timelapse';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nimport './index.css';\r\n\r\nfunction SideNav() {\r\n    const user = useSelector(state => state.auth.user);\r\n\r\n    return (\r\n        <div className=\"side__nav__container\">\r\n            <div className=\"top__side__nav__container\">\r\n                {\r\n                    user.profilePicture ? <img className=\"side__profile__picture\" src={user.profilePicture} alt=\"Profile picture\" /> : <AccountCircleIcon className=\"side__profile__picture side__profile__icon\" />\r\n                }\r\n                <h5 className=\"side__nav__email\">{user.email}</h5>\r\n                <h6>Your tier: <span className=\"side__nav__tier\">{user.tier}</span></h6>\r\n                <Divider />\r\n                <div className=\"side__nav__navigation__container\">\r\n                    <div className=\"side__nav__navigation__section\">\r\n                        <h4 className=\"side__nav__category\">Management</h4>\r\n                        <ul>\r\n                        \r\n                            <NavLink className=\"no__underline side__nav__section__item\" exact activeClassName=\"active__two\" to=\"/dashboard\">\r\n                                <DashboardIcon className=\"side__nav__section__icon\" />\r\n                                Dashboard\r\n                            </NavLink>\r\n                            <NavLink className=\"no__underline side__nav__section__item\" activeClassName=\"active__two\" to=\"/dashboard/kanban\">\r\n                                <FormatListBulletedIcon className=\"side__nav__section__icon\" />\r\n                                Kanban\r\n                            </NavLink>\r\n                            <NavLink className=\"no__underline side__nav__section__item\" activeClassName=\"active__two\" to=\"/dashboard/time-management\">\r\n                                <TimelapseIcon className=\"side__nav__section__icon\"/>\r\n                                Time\r\n                            </NavLink>\r\n                        </ul>\r\n                    </div>\r\n                    \r\n                </div>\r\n                \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SideNav;\r\n","C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\companies\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\Card.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\App.js",["104"],"import Navigation from './components/navigation';\r\nimport About from './views/about';\r\nimport Contact from './views/contact';\r\nimport Pricing from './views/pricing';\r\nimport Faq from './views/faq';\r\nimport Home from './views/home';\r\nimport Login from './views/login';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport jwt_decode from \"jwt-decode\";\r\nimport setAuthToken from \"./utils/setAuthToken\";\r\nimport { setCurrentUser, logoutUser } from \"./actions/authActions\";\r\nimport PrivateRoute from \"./components/privateRoutes/PrivateRoutes\";\r\nimport Register from './views/register';\r\nimport DashBoard from './views/dashboard';\r\nimport { Provider } from 'react-redux';\r\nimport store from \"./store\";\r\nimport Kanban from './views/dashboard/views/kanban/Kanban';\r\nimport TimeManagement from './views/dashboard/views/time-management/TimeManagement';\r\nimport Settings from './views/dashboard/views/settings/Settings';\r\n\r\nimport './App.css';\r\n\r\n// Check for token to keep user logged in\r\nif (localStorage.jwtToken) {\r\n  // Set auth token header auth\r\n  const token = localStorage.jwtToken;\r\n  setAuthToken(token);\r\n  // Decode token and get user info and exp\r\n  const decoded = jwt_decode(token);\r\n  // Set user and isAuthenticated\r\n  store.dispatch(setCurrentUser(decoded));\r\n// Check for expired token\r\n  const currentTime = Date.now() / 1000; // to get in milliseconds\r\n  if (decoded.exp < currentTime) {\r\n    // Logout user\r\n    store.dispatch(logoutUser());\r\n    // Redirect to login\r\n    window.location.href = \"./login\";\r\n  }\r\n}\r\n\r\nfunction App() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"App\">\r\n            <Switch>\r\n              <Route path=\"/\" exact component={Home} />\r\n              <Route path=\"/about\" component={About} />\r\n              <Route path=\"/pricing\" component={Pricing} />\r\n              <Route path=\"/contact\" component={Contact} />\r\n              <Route path=\"/faq\" component={Faq} />\r\n              <Route path=\"/login\" component={Login} />\r\n              <Route path=\"/register\" component={Register} />\r\n              <Switch>\r\n                <PrivateRoute exact path=\"/dashboard\" component={DashBoard} />\r\n                <PrivateRoute path=\"/dashboard/time-management\" component={TimeManagement} />\r\n                <PrivateRoute path=\"/dashboard/kanban\" component={Kanban} />\r\n                <PrivateRoute path=\"/dashboard/settings\" component={Settings} />\r\n              </Switch>\r\n            </Switch>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    )\r\n\r\n}\r\n\r\nexport default App;\r\n",["105","106"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\dashboard\\top-nav\\TopNav.js",["107"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\about\\index.js",[],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\views\\dashboard\\views\\kanban\\KanbanOriginal.js",["108","109","110"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\index.js",[],["111","112"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\reducers\\errorReducer.js",["113"],"C:\\Users\\Chase\\Documents\\Lovast\\TimeGuru-Web\\front-end\\src\\components\\how\\index.js",[],{"ruleId":"114","severity":1,"message":"115","line":11,"column":3,"nodeType":"116","endLine":27,"endColumn":4},{"ruleId":"117","severity":1,"message":"118","line":1,"column":17,"nodeType":"119","messageId":"120","endLine":1,"endColumn":26},{"ruleId":"121","replacedBy":"122"},{"ruleId":"123","replacedBy":"124"},{"ruleId":"121","replacedBy":"125"},{"ruleId":"123","replacedBy":"126"},{"ruleId":"121","replacedBy":"127"},{"ruleId":"123","replacedBy":"128"},{"ruleId":"117","severity":1,"message":"129","line":11,"column":7,"nodeType":"119","messageId":"120","endLine":11,"endColumn":20},{"ruleId":"121","replacedBy":"130"},{"ruleId":"123","replacedBy":"131"},{"ruleId":"132","severity":1,"message":"133","line":19,"column":43,"nodeType":"134","endLine":19,"endColumn":133},{"ruleId":"117","severity":1,"message":"135","line":1,"column":8,"nodeType":"119","messageId":"120","endLine":1,"endColumn":18},{"ruleId":"121","replacedBy":"136"},{"ruleId":"123","replacedBy":"137"},{"ruleId":"132","severity":1,"message":"133","line":21,"column":43,"nodeType":"134","endLine":21,"endColumn":136},{"ruleId":"117","severity":1,"message":"138","line":10,"column":25,"nodeType":"119","messageId":"120","endLine":10,"endColumn":38},{"ruleId":"117","severity":1,"message":"139","line":11,"column":20,"nodeType":"119","messageId":"120","endLine":11,"endColumn":28},{"ruleId":"117","severity":1,"message":"140","line":14,"column":11,"nodeType":"119","messageId":"120","endLine":14,"endColumn":18},{"ruleId":"121","replacedBy":"141"},{"ruleId":"123","replacedBy":"142"},{"ruleId":"114","severity":1,"message":"115","line":3,"column":1,"nodeType":"116","endLine":10,"endColumn":2},"import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","no-native-reassign",["143"],"no-negated-in-lhs",["144"],["143"],["144"],["143"],["144"],"'getCategories' is assigned a value but never used.",["143"],["144"],"jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop.","JSXOpeningElement","'Navigation' is defined but never used.",["143"],["144"],"'setCategories' is assigned a value but never used.","'setCards' is assigned a value but never used.","'reOrder' is assigned a value but never used.",["143"],["144"],"no-global-assign","no-unsafe-negation"]